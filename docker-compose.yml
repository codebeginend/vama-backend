version: "3.5"

services:
  postgres:
    image: postgres
    container_name: postgres-vama
    ports:
      - 54321:5432
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_DB}
    volumes:
      - ../vama-db/vama:/var/lib/postgresql/data
    networks:
      - vama-backend-network
  flyway:
    image: flyway/flyway:9.8.1
    container_name: flyway-vama
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql
    depends_on:
      - postgres
    command: -user=${DATABASE_USERNAME} -password=${DATABASE_PASSWORD} -url=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DB} migrate
    networks:
      - vama-backend-network
  vamaapi:
    image: vama-api:latest
    build:
      context: .
    container_name: vama-api
    env_file:
      - .env.prod
    ports:
      - 8080
    restart: unless-stopped
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DB}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
    depends_on:
      - postgres
    networks:
      - vama-backend-network
  nginx:
    image: nginx:alpine
    container_name: vama-nginx
    volumes:
      - ./ssl:/etc/ssl/
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 443:443
      - 80:80
    depends_on:
      - vamaapi
    networks:
      - vama-backend-network
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - vama-backend-network
networks:
  vama-backend-network:
    driver: bridge